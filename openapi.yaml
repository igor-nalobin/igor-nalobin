<!DOCTYPE html>
<html>
<head>
    <title>Резюме Игоря Налобина</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/3.35.0/swagger-ui.min.css">
    <style>
        body { margin: 0; padding: 20px; background: #fafafa; }
        .header { text-align: center; margin-bottom: 30px; }
        .header h1 { color: #333; }
        .swagger-ui .opblock-summary-path { max-width: 600px; }
        
        /* Стили для красивого отображения */
        .header {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            padding: 30px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .header h1 { 
            margin: 0; 
            font-size: 2.5rem;
            text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }
        .header p { 
            font-size: 1.2rem;
            opacity: 0.9;
            margin: 10px 0 0;
        }
        .contact-info {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 15px;
        }
        .contact-info a {
            color: white;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 5px;
            padding: 8px 15px;
            background: rgba(255,255,255,0.15);
            border-radius: 30px;
            transition: all 0.3s ease;
        }
        .contact-info a:hover {
            background: rgba(255,255,255,0.25);
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Резюме Игоря Налобина</h1>
        <p>Пиар-менеджер | Санкт-Петербург</p>
        <div class="contact-info">
            <a href="mailto:nalobin.igor@gmail.com">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="white">
                    <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                </svg>
                nalobin.igor@gmail.com
            </a>
            <a href="https://t.me/nalobin_igor" target="_blank">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="white">
                    <path d="M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z"/>
                </svg>
                @nalobin_igor
            </a>
        </div>
    </div>
    
    <div id="swagger-ui"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/3.35.0/swagger-ui-bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/3.35.0/swagger-ui-standalone-preset.min.js"></script>
    <script>
        window.onload = function() {
            // Конфигурация спецификации
            const spec = {
                "openapi": "3.0.0",
                "info": {
                    "title": "Резюме API",
                    "version": "1.0.0",
                    "description": "Доступ к профессиональной информации через API"
                },
                "servers": [
                    {
                        "url": "https://raw.githubusercontent.com/igor-nalobin/igor-nalobin/main/data",
                        "description": "Основной сервер с данными"
                    }
                ],
                "paths": {
                    "/about": {
                        "get": {
                            "summary": "Основная информация",
                            "description": "Получить личную и контактную информацию",
                            "responses": {
                                "200": {
                                    "description": "Успешный ответ",
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "$ref": "#/components/schemas/About"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "/skills": {
                        "get": {
                            "summary": "Профессиональные навыки",
                            "description": "Получить список профессиональных навыков",
                            "responses": {
                                "200": {
                                    "description": "Успешный ответ",
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "/experience": {
                        "get": {
                            "summary": "Опыт работы",
                            "description": "Получить историю профессионального опыта",
                            "responses": {
                                "200": {
                                    "description": "Успешный ответ",
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Experience"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "/education": {
                        "get": {
                            "summary": "Образование",
                            "responses": {
                                "200": {
                                    "description": "Успешный ответ",
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Education"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "/languages": {
                        "get": {
                            "summary": "Языки",
                            "responses": {
                                "200": {
                                    "description": "Успешный ответ",
                                    "content": {
                                        "application/json": {
                                            "schema": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Language"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "components": {
                    "schemas": {
                        "About": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string", "example": "Игорь Налобин"},
                                "profession": {"type": "string", "example": "Пиар-менеджер"},
                                "email": {"type": "string", "example": "nalobin.igor@gmail.com"},
                                "location": {"type": "string", "example": "Санкт-Петербург"}
                            }
                        },
                        "Experience": {
                            "type": "object",
                            "properties": {
                                "company": {"type": "string"},
                                "position": {"type": "string"},
                                "period": {"type": "string"},
                                "description": {"type": "string"}
                            }
                        },
                        "Education": {
                            "type": "object",
                            "properties": {
                                "university": {"type": "string"},
                                "faculty": {"type": "string"},
                                "degree": {"type": "string"},
                                "period": {"type": "string"}
                            }
                        },
                        "Language": {
                            "type": "object",
                            "properties": {
                                "language": {"type": "string"},
                                "level": {"type": "string"}
                            }
                        }
                    }
                }
            };

            // Инициализация Swagger UI
            const ui = SwaggerUIBundle({
                spec: spec,
                dom_id: '#swagger-ui',
                presets: [
                    SwaggerUIBundle.presets.apis,
                    SwaggerUIStandalonePreset
                ],
                layout: "StandaloneLayout",
                requestInterceptor: (request) => {
                    // Добавляем .json к URL перед отправкой запроса
                    if (request.url.startsWith('https://raw.githubusercontent.com')) {
                        // Добавляем .json к пути
                        request.url = request.url + '.json';
                        
                        // Добавляем параметр для избежания кэширования
                        const separator = request.url.includes('?') ? '&' : '?';
                        request.url += `${separator}nocache=${Date.now()}`;
                        
                        // Добавляем заголовки для CORS
                        request.headers.Origin = window.location.origin;
                        request.headers.Referer = window.location.href;
                    }
                    return request;
                },
                responseInterceptor: (response) => {
                    // Убедимся, что ответ обрабатывается как JSON
                    if (response.url.includes('.json') && typeof response.body === 'string') {
                        try {
                            response.body = JSON.parse(response.body);
                        } catch (e) {
                            console.error('Ошибка парсинга JSON', e);
                        }
                    }
                    return response;
                }
            });
        }
    </script>
</body>
</html>